import axios from "axios";
import type { NextPage } from "next";
import Head from "next/head";
import { ReactNode, useEffect } from "react";
import styled from "styled-components";
import { useAppDispatch } from "../store/dispatcher";
import notes from "../store/notesSlice";
import { INote } from "../types";
import Main from "./Main";
const Container = styled.div`
	padding: 2rem;
`;

interface Props {
	readonly children?: ReactNode;
	notes: INote[];
}

const Home: NextPage<Props> = props => {
	const dispatch = useAppDispatch();

	useEffect(() => {
		dispatch(notes.action.addNotes({ notes: props.notes }));
	}, []);

	return (
		<Container>
			<Head>
				<title>Notes App</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Main />
		</Container>
	);
};

export default Home;

export async function getStaticProps() {
	let notes: INote[] | [] = [];
	try {
		const response = await axios.get("http://localhost:3000/api/notes");
		// action.addNotes(response.data);

		notes = response.data.notes;
	} catch (error) {
		console.log(error);
	}

	return {
		props: {
			notes,
		},
	};
}

